parameters:
  - name: service_name
    type: string
  - name: short_service_name
    type: string
  - name: service_base_path
    type: string
  - name: apigee_deployments
    type: object

extends:
  template: azure/common/apigee-deployment.yml@common
  parameters:
    service_name: ${{ parameters.service_name }}
    short_service_name: ${{ parameters.short_service_name }}
    service_base_path: ${{ parameters.service_base_path }}
    apigee_deployments: ${{ parameters.apigee_deployments }}
    prod_requires_approval: true
    post_deploy:
      - bash: |
          #!/bin/bash

          set -euo pipefail

          export SERVICE_BASE_PATH=$(SERVICE_BASE_PATH)
          export APIGEE_ENVIRONMENT=$(APIGEE_ENVIRONMENT)

          # Poll EPS API until our deployed version of EPS matches the release version
          if [ "$APIGEE_ENVIRONMENT" != "prod" ]; then
              envPrefix="$APIGEE_ENVIRONMENT."
          fi;
          basePath="${$SERVICE_BASE_PATH/eps-api-tool/electronic-prescriptions}"
          url="https://${envPrefix}api.service.nhs.uk/$basePath/_status"
          interval_in_seconds=5
          releaseCommit="$(Build.SourceVersion)"
          printf "\nPolling %s every %s seconds, until commit is: %s\n" "$url" "$interval_in_seconds" "$releaseCommit"
          attempts=0
          success=0
          until [ $attempts -eq 60 ]
          do
          responseData=$(curl -H "apiKey: $(status-endpoint-api-key)" "$url" -s)
          deployedCommit=$(echo "$responseData" | jq -r ".commitId")
          dependenciesUp=$(echo "$responseData" | jq -r ".status")
          if [ "$deployedCommit" == "$releaseCommit" ] && [ "$dependenciesUp" == "pass" ]; then
              success=1
              break;
          fi;
          ((attempts=attempts+1))
          sleep $interval_in_seconds;
          done

          if [ $success == 0 ]
          then
              echo "Smoke tests failed, API was not ready in time"
              exit 255
          fi
        displayName: Wait for deploy
      - bash: |
          #!/bin/bash

          set -euo pipefail

          export SERVICE_BASE_PATH=$(SERVICE_BASE_PATH)
          export APIGEE_ENVIRONMENT=$(APIGEE_ENVIRONMENT)

          if [ "$APIGEE_ENVIRONMENT" == "internal-dev" ]; then
            cd "$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/e2e-tests"
            npm ci
            npm t
          fi;
        displayName: Run selenium tests
