AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  Main template for Load Balancer with all resources included

Parameters:
  StackName:
    Type: String

  EnableMutualTLS:
    Type: String
    Default: true

  TruststoreVersion:
    Type: String
    Default: none

  TruststoreFile:
    Type: String
    Default: none

  VPC:
    Type: AWS::EC2::VPC::Id

  SubnetA:
    Type: AWS::EC2::Subnet::Id

  SubnetB:
    Type: AWS::EC2::Subnet::Id

  SubnetC:
    Type: AWS::EC2::Subnet::Id

  VersionNumber:
    Type: String
    Default: "xxx"

  CommitId:
    Type: String
    Default: "xxx"

  HostedZoneName:
    Type: String

Conditions:
  EnableMutualTLSCondition: !Equals [ !Ref EnableMutualTLS, "true" ]

Resources:
  GenerateCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      ValidationMethod: DNS
      DomainName:
        Fn::Join:
          - "."
          - - !Ref StackName
            - !ImportValue eps-route53-resources:EPS-domain
      DomainValidationOptions:
        - DomainName:
            Fn::Join:
              - "."
              - - !Ref StackName
                - !ImportValue eps-route53-resources:EPS-domain
          HostedZoneId: !ImportValue eps-route53-resources:EPS-ZoneID

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 60
      Scheme: internet-facing
      SecurityGroups:
        - !ImportValue vpc-resources:VpcDefaultSecurityGroup
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB
        - !Ref SubnetC

  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref GenerateCertificate
      SslPolicy: !If
        - EnableMutualTLSCondition
        - ELBSecurityPolicy-TLS-1-2-2018-06
        - ELBSecurityPolicy-2016-08

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      TargetType: ip
      VpcId: !Ref VPC

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue eps-route53-resources:EPS-ZoneID
      Name: !Join
        - "."
        - - !Ref StackName
          - !ImportValue eps-route53-resources:EPS-domain
      Type: A
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        EvaluateTargetHealth: False
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID

Outputs:
  Endpoint:
    Description: Load Balancer Endpoint
    Value: !Sub 'https://${StackName}.${HostedZoneName}'
