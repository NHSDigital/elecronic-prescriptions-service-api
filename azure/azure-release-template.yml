parameters:
  - name: service_name
    type: string
  - name: short_service_name
    type: string
  - name: service_base_path
    type: string
  - name: apigee_deployments
    type: object
  - name: enable_monitoring
    type: boolean
  - name: enable_status_monitoring
    type: boolean
  - name: manual_approval_env
    type: string
  - name: jinja_templates
    type: object

extends:
  template: azure/common/apigee-deployment.yml@common
  parameters:
    service_name: ${{ parameters.service_name }}
    short_service_name: ${{ parameters.short_service_name }}
    service_base_path: ${{ parameters.service_base_path }}
    enable_monitoring: ${{ parameters.enable_monitoring }}
    enable_status_monitoring: ${{ parameters.enable_status_monitoring }}
    manual_approval_env: ${{ parameters.manual_approval_env }}
    apigee_deployments: ${{ parameters.apigee_deployments }}
    jinja_templates: ${{ parameters.jinja_templates }}
    prod_requires_approval: false
    post_deploy:
      - bash: |
          if [ "$(APIGEE_ENVIRONMENT)" == "prod" ]
          then
            echo "##vso[task.setvariable variable=run_smoke_tests]false"
          elif [[ -d "$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/pact" ]]
          then
            echo "##vso[task.setvariable variable=run_smoke_tests]true"
          else
            echo "##vso[task.setvariable variable=run_smoke_tests]false"
          fi
        displayName: Check for smoke tests
      - task: DockerInstaller@0
        displayName: Install docker
        inputs:
          dockerVersion: 17.09.0-ce
          releaseType: stable
      - task: NodeTool@0
        displayName: Use Node v16.14.x
        inputs:
         versionSpec: '16.14.x'
        condition: and(succeeded(), eq(variables['run_smoke_tests'], 'true'))
      - task: DownloadSecureFile@1
        displayName: 'Download int signing cert'
        name: eps_int_cert
        inputs:
          secureFile: 'eps_int_test_certificate.crt'
      - task: DownloadSecureFile@1
        displayName: 'Download int signing key'
        name: eps_int_private_key
        inputs:
          secureFile: 'eps_int_test_private.key'
      - bash: ./run_smoke_tests.sh
        displayName: Run smoke tests
        condition: and(succeeded(), eq(variables['run_smoke_tests'], 'true'))
        env:
          SERVICE_ARTIFACT_NAME: $(SERVICE_ARTIFACT_NAME)
          SERVICE_BASE_PATH: $(SERVICE_BASE_PATH)
          APIGEE_ENVIRONMENT: $(APIGEE_ENVIRONMENT)
          PACT_BROKER_URL: $(PACT_BROKER_URL)
          PACT_BROKER_BASIC_AUTH_USERNAME: $(PACT_BROKER_BASIC_AUTH_USERNAME)
          PACT_BROKER_BASIC_AUTH_PASSWORD: $(PACT_BROKER_BASIC_AUTH_PASSWORD)
          PACT_BROKER_NEXT_URL: $(PACT_BROKER_NEXT_URL)
          PACT_BROKER_NEXT_TOKEN: $(PACT_BROKER_NEXT_TOKEN)
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/pact/prescriptions-$(APIGEE_ENVIRONMENT).txt'
          artifactName: 'smoke-tests'
          publishLocation: 'Container'
        condition: eq(variables['run_smoke_tests'], 'true')
