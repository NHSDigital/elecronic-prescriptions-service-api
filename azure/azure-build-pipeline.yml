name: "$(SourceBranchName)+$(BuildID)"

trigger:
  branches:
    include:
      - tags/refs/v*
  tags:
    include:
      - v*

pr:
  branches:
    include: ['*']

resources:
  repositories:
    - repository: common
      type: github
      name: NHSDigital/api-management-utils
      ref: refs/heads/edge
      endpoint: NHSDigital

variables:
  - template: project.yml

extends:
  template: azure/common/apigee-build.yml@common
  parameters:
    service_name: ${{ variables.service_name }}
    short_service_name: ${{ variables.short_service_name }}
    cache_steps:
      - task: DownloadGitHubRelease@0
        displayName: Download Validator
        inputs:
          connection: NHSDigital
          userRepository: NHSDigital/validation-service-fhir-r4
          itemPattern: '**'
          defaultVersionType: specificTag
          version: v1.0.99-alpha
          downloadPath: "validator"
      - task: NodeTool@0
        displayName: Use Node v16.14.x
        inputs:
         versionSpec: '16.14.x'
    test_steps:
      - bash: "make test"
        displayName: Run Quality Checks
        workingDirectory: "${{ variables.service_name }}"
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: "**/junit.xml"
          searchFolder: "${{ variables.service_name }}"
          mergeTestResults: true
          testRunTitle: 'EPS Tests'
          failTaskOnFailedTests: true
      - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
        displayName: Generate Code Coverage Report
        inputs:
          reports: '$(Build.ArtifactStagingDirectory)/testresults/**/coverage.cobertura.xml'
          targetdir: $(Build.ArtifactStagingDirectory)/testresults/coveragereport'
          reporttypes: 'HtmlInline_AzurePipelines;Cobertura'
      - powershell: |
          [XML]$coverage = Get-Content $(System.DefaultWorkingDirectory)/CoverageResults/Cobertura.xml
          if($coverage.coverage.'line-rate' -ge .50){Write-Host "The value is greater than 50."}else{throw}
        displayName: 'PowerShell Script'
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish Code Coverage Results'
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: '$(Build.ArtifactStagingDirectory)/testresults/**/coverage.cobertura.xml'
          pathToSources: '$(System.DefaultWorkingDirectory)'
          reportDirectory: '$(Build.ArtifactStagingDirectory)/testresults/coveragereport'
          failIfCoverageEmpty: true
        env:
          DISABLE_COVERAGE_AUTOGENERATE: 'true'
