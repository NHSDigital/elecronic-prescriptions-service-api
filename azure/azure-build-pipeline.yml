name: "$(SourceBranchName)+$(BuildID)"

trigger:
  branches:
    include:
      - tags/refs/v*
  tags:
    include:
      - v*

pr:
  branches:
    include: ['*']

resources:
  repositories:
    - repository: common
      type: github
      name: NHSDigital/api-management-utils
      ref: refs/heads/edge
      endpoint: NHSDigital

variables:
  - template: project.yml

extends:
  template: azure/common/apigee-build.yml@common
  parameters:
    service_name: ${{ variables.service_name }}
    short_service_name: ${{ variables.short_service_name }}
    cache_steps:
      - task: DownloadGitHubRelease@0
        displayName: Download Validator
        inputs:
          connection: NHSDigital
          userRepository: NHSDigital/validation-service-fhir-r4
          itemPattern: '**'
          defaultVersionType: specificTag
          version: v1.0.99-alpha
          downloadPath: "validator"
      - task: NodeTool@0
        displayName: Use Node v16.14.x
        inputs:
         versionSpec: '16.14.x'
      - task: UseDotNet@2
        displayName: Use dot net core for publishing coverage results
        inputs:
          packageType: 'sdk'
          version: '2.1.x'
          installationPath: '$(Agent.ToolsDirectory)/dotnet'
    test_steps:
      - bash: "make test"
        displayName: Run Quality Checks
        workingDirectory: "${{ variables.service_name }}"
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: "**/junit.xml"
          searchFolder: "${{ variables.service_name }}"
          mergeTestResults: true
          testRunTitle: 'EPS Tests'
          failTaskOnFailedTests: true
        condition: always()          
      - task: PublishCodeCoverageResults@2
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: "$(Pipeline.Workspace)/${{ variables.service_name }}/packages/coordinator/coverage/cobertura-coverage.xml"
          pathToSources: "$(Pipeline.Workspace)/${{ variables.service_name }}/packages/coordinator/"
          reportDirectory: "$(Pipeline.Workspace)/${{ variables.service_name }}/packages/coordinator/coverage/"
        condition: always()          
