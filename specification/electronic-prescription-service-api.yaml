# This is an OpenAPI Specification (https://swagger.io/specification/)
# for the Electronic Prescription Service (EPS) API
# owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  title: Electronic Prescription Service (FHIR) API
  version: "{VERSION}"
  contact:
    name: Electronic Prescription Service FHIR API Support
    url: "https://digital.nhs.uk/developer/help-and-support"
    email: "api.management@nhs.net"
  description: |
    ## Overview
    Use this API to access the [Electronic Prescription Service (EPS)](https://digital.nhs.uk/services/electronic-prescription-service) - the national service used to send electronic prescriptions from GP surgeries to pharmacies.

    You can:
    * prepare a secondary care (outpatient) prescription for signing
    * create a secondary care (outpatient) prescription
    * evaluate prescription signing client implementations

    You cannot currently use this API to:
    * prepare a primary care prescription for signing
    * create a primary care prescription
    * prepare a secondary care (other than outpatient) prescription for signing
    * create a secondary care (other than outpatient) prescription
    * prepare a tertiary care prescription for signing
    * create a tertiary care prescription
    * cancel a prescription
    * check the status of a prescription
    * release a prescription for dispensing
    * claim for a dispensed prescription
    * Track prescriptions or check a prescriptions status


    Currently, this API can only be accessed by healthcare professionals, authenticated with an NHS smartcard or equivalent.

    ## Using this API
    Electronic prescription messages are digitally signed to protect against tampering and to prevent repudiation. While the messages themselves are FHIR-based, for reasons of backwards compatibility, the signatures must be represented in HL7 V3 format. To make this easier, you can POST a prescription to the /Prepare endpoint to receive exactly the HL7 V3 fragments which need to be signed to conform to the specification.
    
    The flow to create a prescription is then:
    * POST a prescription in FHIR format to the /Prepare endpoint
    * Sign the response and put the result in a Provenance resource in the original FHIR prescription
    * POST the signed prescription in FHIR format to the /Send endpoint

    ## Related APIs
    The following APIs also give access to the Electronic Prescription Service:
    - [Electronic Prescription Service (HL7 V3) API](https://data.developer.nhs.uk/dms/mim/4.2.00/Index.htm) - use this if you want to use functions that are not yet available on the FHIR API.
    - [Prescription Tracker API](https://developer.nhs.uk/apis/eps-tracker) - use this if you want a read-only interface to obtain information about a patient’s prescriptions.

    ## API status and roadmap
    All endpoints are in [alpha](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status) - expect further breaking changes.
    
    The API is currently available for sandbox testing and integration testing, but not for production use.

    The following items are on our roadmap, in rough priority order:
    * Cancellation
    * Primary care prescribing
    * Dispensing
    * Prescription tracking
    * Other prescribing scenarios

    We are extremely keen to receive feedback on the API during alpha and beta,
    for example if there are data fields missing that you think you need.
    Please [get in touch](https://digital.nhs.uk/developer/help-and-support) with any comments or suggestions.

    ## Technology
    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).

    It also conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir) global standard for health care data exchange.
    Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core), which is built on FHIR Release 4.

    You don’t need to know much about FHIR to use this API - FHIR APIs are just RESTful APIs that follow specific rules.
    In particular:
    - resource names are capitalised and singular, for example the /Prepare not /prepare
    - array names are singular, for example `line` not `lines` for address lines
    - data items that are country-specific and thus not included in the FHIR global base resources are usually wrapped in an `extension` object

    This API is available on the Internet, although access using NHS smartcards (see below)
    currently requires a connection to the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).

    ## Authorisation
    This API is [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:
    - a healthcare professional
    - strongly authenticated, using either an NHS smartcard or a modern alternative

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to authorise the calling system.
    It supports the following security patterns:
    * user-restricted RESTful API - using NHS Identity - combined authentication and authorisation
    * user-restricted RESTful API - using NHS Identity - separate authentication and authorisation

    For more details, see [user-restricted APIs](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis).

    ## Testing
    You can test this API in:
    * our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing) for initial developer testing (coming soon)
    * our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing) for formal integration testing (coming soon)

    Our sandbox environment is a very basic simulation of the live service. It only covers a limited set of scenarios and is stateless, so does not actually persist any updates.

    For more details on sandbox testing, or to try out the sandbox using our "Try this API" feature, see the documentation for each endpoint.

    ## Assurance
    We are hoping to make the assurance process as lightweight and as self-service as possible.

    More details to follow.

    ## Endpoints
    To see details for specific endpoints, select from the list on the left hand side of the page:
    * `POST /Prepare` - convert a FHIR prescription into the HL7 V3 signature fragments to be signed by the prescriber
    * `POST /Send` - send a signed FHIR prescription to Spine
    * `POST /Convert` - convert a FHIR prescription to HL7V3 to verify client signature implementations
servers:
  - url: 'https://internal-qa-sandbox.api.service.nhs.uk/electronic-prescriptions'
    description: 'Internal QA Sandbox environment.'
tags:
  - name: dispensing
  - name: prescribing
paths:
  /Prepare:
    post:
      operationId: prepare-prescription
      summary: Convert prescription to signature fragments
      description: Convert a prescription in FHIR format into the canonicalised HL7 V3 signature fragments which should be signed by the prescriber.
      tags:
        - prescribing
      requestBody:
        required: true
        content:
          #application/fhir+json: #FIXME - should be set to this but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              $ref: components/schemas/Bundle.yaml
            examples:
              example:
                value:
                  $ref: components/examples/example-1-repeat-dispensing/PrepareRequest-FhirMessageUnsigned.json
        description: ''
      responses:
        '200':
          description: Successful conversion.
          content:
            #application/fhir+json: #FIXME - should be set to this but we have had to change it due to a FHIR validator bug
            application/json:
              schema:
                $ref: components/schemas/Parameters.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-1-repeat-dispensing/PrepareResponse-FhirMessageDigest.json
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-4XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
        '5XX':
          description: Server error.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-5XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-c-unhandled-error/Response-FhirError.json
          headers: {}
  /Send:
    post:
      operationId: send-prescription
      summary: Send a signed prescription to Spine
      description: Submit a signed prescription to EPS
      tags:
        - prescribing
      requestBody:
        required: true
        content:
          #application/fhir+json: FIXME - should be set to this but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              $ref: components/schemas/Bundle.yaml
            examples:
              success:
                value:
                  $ref: components/examples/example-1-repeat-dispensing/SendRequest-FhirMessageSigned.json
              patient-deceased:
                value:
                  $ref: components/examples/example-b-spine-error-patient-deceased/SendRequest-FhirMessageSigned.json
        description: ''
      responses:
        '200':
          description: Successfully submitted
          content:
            text/plain:
              schema:
                type: string
                example: "Message Sent"
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-4XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
        '5XX':
          description: Server error.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-5XX-send.yaml
              examples:
                patient-deceased:
                  value:
                    $ref: components/examples/example-b-spine-error-patient-deceased/SendResponse-FhirError.json
          headers: {}
  /Convert:
    post:
      operationId: convert-prescription
      summary: Convert a prescription to a format used for signing
      description: Convert a prescription from FHIR format into a HL7 V3 representation which can be used to verify signing operations.
      tags:
        - prescribing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: components/schemas/Bundle.yaml
            examples:
              example:
                value:
                  $ref: components/examples/example-1-repeat-dispensing/SendRequest-FhirMessageSigned.json
        description: ''
      responses:
        '200':
          description: Successfully submitted
          content:
            application/xml:
              schema:
                type: string
                example:
                  $ref: components/examples/example-1-repeat-dispensing/ConvertResponse-Hl7V3Message.xml
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-4XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
        '5XX':
          description: Server error.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-5XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-c-unhandled-error/Response-FhirError.json
components:
  schemas:
    Bundle:
      $ref: components/schemas/Bundle.yaml
    MedicationRequest:
      $ref: components/schemas/MedicationRequest.yaml
    Patient:
      $ref: components/schemas/Patient.yaml
    Practitioner:
      $ref: components/schemas/Practitioner.yaml
    PractitionerRole:
      $ref: components/schemas/PractitionerRole.yaml
    Organization:
      $ref: components/schemas/Organization.yaml
    Parameters:
      $ref: components/schemas/Parameters.yaml
    Provenance:
      $ref: components/schemas/Provenance.yaml
