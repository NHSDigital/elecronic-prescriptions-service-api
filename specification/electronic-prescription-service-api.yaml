# This is an OpenAPI Specification (https://swagger.io/specification/)
# for the Electronic Prescription Service (EPS) API
# owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
x-nhs-api-spec-guid: 5ead5713-9d2b-46eb-8626-def5fd2a2350
info:
  title: Electronic Prescription Service (FHIR) API
  version: "{VERSION}"
  contact:
    name: Electronic Prescription Service FHIR API Support
    url: "https://digital.nhs.uk/developer/help-and-support"
    email: "api.management@nhs.net"
  description: |
    ## Overview
    <style>.codeinline.example {word-wrap: anywhere;}</style>
    Use this API to access the [Electronic Prescription Service (EPS)](https://digital.nhs.uk/services/electronic-prescription-service) - the national service used to send electronic prescription messages between prescribers and community dispensers.
    
    ### As a prescriber
    You can:
    * create a secondary care (outpatient) prescription
    * cancel a secondary care (outpatient) prescription

    You cannot currently use this API to:
    * create a primary care prescription
    * create a secondary care (other than outpatient) prescription
    * create a tertiary care prescription
    * track prescriptions or check a prescription's status
    
    ### As a dispenser
    You can:
    * download a prescription (sandbox implementation only)
    * return a prescription (sandbox implementation only)
    * submit a dispense notification to EPS (sandbox implementation only)
    * withdraw a dispense notification (sandbox implementation only)

    You cannot currently use this API to:
    * claim for a dispensed prescription
    * track prescriptions or check a prescription's status
    
    ### Using this API as a prescriber
    #### To create a prescription:
    1. POST a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order) to the `/FHIR/R4/$prepare` endpoint to get the encoded prescription data that requires a signature.
    2. Sign the encoded prescription data using the [Signing Service](https://digital.nhs.uk/developer/api-catalogue/signing-service) or your existing local signing solution to get the prescription data signed.
    3. Generate an XML-DSig using the signed prescription data (see below).
    4. Put the XML-DSig in a `Provenance` resource.
    5. Add the `Provenance` to the prescription-order message.
    6. POST the signed prescription-order message to the `/FHIR/R4/$process-message` endpoint.

    To generate an XML-DSig: 
    1. Get the encoded prescription data from the `/FHIR/R4/$prepare` endpoint of the EPS API.
    2. Get the signature and certificate from the `/SignatureResponse` endpoint of the [Signing Service](https://digital.nhs.uk/developer/api-catalogue/signing-service).
    3. Assemble an XML-DSig (see the javascript example code below).

    Example code to generate an XML-DSig: 
    ```javascript
      function toXmlSignature(digest: string, signature: string, certificate: string): string {
        const decodedDigest = Buffer.from(digest, "base64").toString("utf-8") 
        const digestWithoutNamespace = decodedDigest.replace("<SignedInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">", "<SignedInfo>")
        const xmlSignature = `<Signature xmlns="http://www.w3.org/2000/09/xmldsig#">${digestWithoutNamespace}<SignatureValue>${signature}</SignatureValue><KeyInfo><X509Data><X509Certificate>${certificate}</X509Certificate></X509Data></KeyInfo></Signature>`
        return Buffer.from(xmlSignature, "utf-8").toString("base64")
      }
    ```

    #### To cancel a prescription:
    1. POST a [prescription-order-update message](https://simplifier.net/guide/DigitalMedicines/prescription-order-update) to the `/FHIR/R4/$process-message` endpoint.

    ### Using this API as a dispenser
    #### To download a prescription to be dispensed: 
    1. POST a [Task-release-message](https://simplifier.net/guide/DigitalMedicines/release-duplicate-2) to the `/FHIR/R4/Task/$release` endpoint.

    #### To submit a dispense notification to EPS:
    1. POST a [prescription-dispense-notification](https://simplifier.net/guide/DigitalMedicines/dispense-notification) message to the `/FHIR/R4/$process-message` endpoint to inform EPS of a partial/successful dispense.

    #### To return a prescription:
    1. POST a [Task-dispense-proposal-return](https://simplifier.net/guide/DigitalMedicines/Task) message to the `/FHIR/R4/Task` endpoint.

    #### To withdraw a dispense notification:
    1. POST a [Task-dispense-notification-amend](https://simplifier.net/guide/DigitalMedicines/Task) message to the `/FHIR/R4/Task` endpoint.

    ## Who can use this API
    This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development.

    You must do this before you can go live (see ‘Onboarding’ below).
    
    ## Related APIs
    The following APIs also give access to the Electronic Prescription Service:
    - [Electronic Prescription Service - HL7 V3 API](https://data.developer.nhs.uk/dms/mim/4.2.00/Index.htm) - use this if you want to use functions that are not yet available on the FHIR API
    - [Signing Service](https://digital.nhs.uk/developer/api-catalogue/signing-service) - use this to digitally sign a prescription
    - [Prescription Tracker API](https://developer.nhs.uk/apis/eps-tracker) - use this if you want a read-only interface to obtain information about a patient’s prescriptions

    The following APIs may be required when accessing the  Electronic Prescription Service:
    - [Personal Demographics Service - FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir) - use this to obtain patient data

    ## API status and roadmap
    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?tag=eps-fhir-api).

    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).

    ### Prescribing API
    Prescribing flows for EPS FHIR API are now in a state of technical go-live awaiting our first of type integration.

    The API is currently available for sandbox testing and integration testing, but not for production use.

    ### Dispensing API
    Download and the mark as dispensed dispensing flows for the EPS FHIR API are in the sandbox environment only, withdraw and return are currently only referenced in this spec.

    ## Technology
    This API conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir) global standard for health care data exchange.
    Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core), which is built on FHIR Release 4.

    You don’t need to know much about FHIR to use this API - FHIR APIs are just RESTful APIs that follow specific rules.
    In particular:
    - array names are singular, for example `line` not `lines` for address lines
    - data items that are country-specific and thus not included in the FHIR global base resources are usually wrapped in an `extension` object

    ## Network access
    This API is available on the internet and, indirectly, on the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).
    To use this API with NHS smartcards (see below) you do need an HSCN connection, although internet-facing alternatives are available.

    For more details see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation
    ### Application-restricted access
    This access mode is [application-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis), 
    meaning we authenticate the calling application but not the end user.

    You can use this access mode as follows:
    - unattended (end user not present), for example as part of a back end process to send prsecriptions to the API
    - attended (end user present) - in which case, you must ensure the end user is authenticated and suitably authorised locally by the calling application 

    For further details on attended access, see [user-restricted access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis). 

    To use this access mode, use the following security pattern:
    - [Application-restricted RESTful API - signed JWT authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-signed-jwt-authentication)

    ## Environment and Testing
    | Purpose           | URL                                                                 |
    | -------------     | --------------------------------------------------------------------|
    | Sandbox           | `https://sandbox.api.service.nhs.uk/electronic-prescriptions`       |
    | Integration test  | `https://int.api.service.nhs.uk/electronic-prescriptions`           |
    | Production        | Not yet available                                                   |

    ### Sandbox testing
    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    * is for early developer testing
    * only covers a limited set of scenarios
    * is stateless, so it does not actually persist any updates
    * is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    * is for formal integration testing
    * is stateful, so persists updates
    * includes authorisation, with smartcard and non-smartcard options

    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).   

    ## Onboarding
    You need to get your software approved by us before it can go live with this API. We call this onboarding.
    We are hoping to make the onboarding process as lightweight and as self-service as possible however it can sometimes be quite long, so it’s worth planning well ahead.

    To begin the onboarding process please [contact us](https://digital.nhs.uk/developer/help-and-support) and request the 'EPS use case form'.

    ## Resources
    Use the [Digital Medicines Implementation Guide](https://simplifier.net/guide/DigitalMedicines) to assist with your integration.
    This is the FHIR specification for Digital Medicines starting with the assets required for an electronic prescription sent to the EPS.

    ## Errors
    ### API wide errors
    | HTTP Status   | Error Code             | Description                                                                      |
    | --------------| ---------------------- | -------------------------------------------------------------------------------- |
    | 400           | MISSING_FIELD          | A required field is missing within the request, see `display` field in response. |
    | 400           | INVALID_VALUE          | Invalid value in message.                                                        |
    | 400           | INCORRECT_RESOURCETYPE | FHIR resource has incorrect resourceType.                                        |
    | 404           | NOT_FOUND              | Route not found.                                                                 |

    ### Platform wide errors
    | HTTP Status   | Error Code      | Description                                             |
    | ------------- | --------------- | ------------------------------------------------------- |
    | 401           | ACCESS_DENIED   | User does not have permission for a particular request. |
    | 403           | FORBIDDEN       | Insufficient authorization.                             |
    | 404           | NOT_FOUND       | Resource not found.                                     |
    
    For further details on common HTTP status codes, see [5xx status codes](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide)
    
servers:
  - url: 'https://sandbox.api.service.nhs.uk/electronic-prescriptions'
    description: 'Sandbox'
  - url: 'https://int.api.service.nhs.uk/electronic-prescriptions'
    description: 'Integration test'
tags:
  - name: dispensing
  - name: prescribing
paths:
  /FHIR/R4/$prepare:
    post:
      operationId: prepare-prescription
      summary: Convert a prescription message to signature fragments
      description: |
        ## Overview
        Use this endpoint to convert a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order) in FHIR format into HL7 V3 signature fragments which can then be signed by the prescriber.
      tags:
        - prescribing
      parameters:
        - $ref: '#/components/parameters/BearerAuthorization'
        - $ref: '#/components/parameters/RequestID'
        - $ref: '#/components/parameters/CorrelationID'
      requestBody:
        required: true
        content:
          #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              type: object
            examples:
              example:
                value:
                  $ref: components/examples/secondary-care/community/acute/nominated-pharmacy/nurse/prescribing-and-professional-codes/1-Prepare-Request-200_OK.json
      responses:
        '200':
          description: Successful conversion.
          content:
            #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
            application/json:
              schema:
                $ref: '#/components/schemas/parameters-response'
              examples:
                example:
                  value:
                    $ref: components/examples/secondary-care/community/acute/nominated-pharmacy/nurse/prescribing-and-professional-codes/1-Prepare-Response-200_OK.json
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/operation-outcome'
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
  /FHIR/R4/$process-message:
    post:
      operationId: send-message
      summary: Send a prescription message to EPS
      description: |
        ## Overview
        Use this endpoint to send a message to EPS.

        The effect of calling this endpoint depends on the type of the message, which is determined by the `MessageHeader` resource:
        * to create a prescription, send a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order). The message must include a digital signature.
        * to cancel a prescription, send a [prescription-order-update message](https://simplifier.net/guide/DigitalMedicines/prescription-order-update).
        * to notify EPS of a partial/successful dispense, send a [dispense-notification message](https://simplifier.net/guide/DigitalMedicines/prescription-dispense).
      tags:
        - dispensing
        - prescribing
      parameters:
        - $ref: '#/components/parameters/BearerAuthorization'
        - $ref: '#/components/parameters/RequestID'
        - $ref: '#/components/parameters/CorrelationID'
      requestBody:
        required: true
        content:
          #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              type: object
            examples:
              prescribe-success:
                value:
                  $ref: components/examples/secondary-care/community/acute/nominated-pharmacy/nurse/prescribing-and-professional-codes/1-Process-Request-Send-200_OK.json
              dispense-success:
                value:
                  $ref: components/examples/secondary-care/homecare/acute/nominated-pharmacy/clinical-practitioner/1-Process-Request-Dispense-200_OK.json
              patient-deceased:
                value:
                  $ref: components/examples/example-b-spine-error-patient-deceased/SendRequest-FhirMessageSigned.json
        description: ''
      responses:
        '200':
          description: Successfully submitted.
          content:
            application/fhir+json:
              schema:
                type: object
              examples:
                example:
                  value:
                    $ref: components/examples/secondary-care/community/acute/nominated-pharmacy/nurse/prescribing-and-professional-codes/1-Process-Response-Send-200_OK.json
        '4XX':
          description: |
            An error occurred as follows:

            | HTTP status | Error code         | Description                                     | FHIR type        |
            | ----------- | ------------------ | ----------------------------------------------- | ---------------- |
            | 400         | BAD_REQUEST        | Spine Error - duplicate prescription ID exists. | OperationOutcome |
            | 400         | BAD_REQUEST        | Spine Error - prescription not found.           | Bundle           |
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/responses/200OperationOutcome'
              examples:
                OperationOutcome:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
                Bundle:
                  value:
                    $ref: components/examples/prescription-order-update/bundle-error.json
  /FHIR/R4/Task:
    post:
      operationId: return / withdraw
      summary: Send either a Task-dispense-notification-amend or Task-dispense-proposal-return to EPS
      description: |
        ## Overview
        This endpoint can be used to return a downloaded prescription to Spine, so that another dispensing system can download it. 
        
        It can also be used to withdraw a dispense-notification message, for example in the case that a prescription was marked as dispensed erroneously.

        For information on how to create these messages, see [DigitalMedicines-Task](https://simplifier.net/guide/DigitalMedicines/Task).

        This endpoint is only available in the sandbox environment.
      tags:
        - dispensing
      parameters:
        - $ref: '#/components/parameters/BearerAuthorization'
        - $ref: '#/components/parameters/RequestID'
        - $ref: '#/components/parameters/CorrelationID'
      requestBody:
        required: true
        content:
          application/json:
            examples:
              return:
                value:
                  $ref: components/examples/secondary-care/homecare/acute/nominated-pharmacy/clinical-practitioner/2-Task-Request-Return-200_OK.json
              withdraw:
                value:
                  $ref: components/examples/secondary-care/homecare/acute/nominated-pharmacy/clinical-practitioner/3-Task-Request-Withdraw-200_OK.json
      responses:
        '200':
          description: Action completed successfully.
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/responses/200OperationOutcome'
              examples:
                OperationOutcome:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
        '4XX':
          description: |
            An error occurred as follows:

            | HTTP status | Error code         | Description             |
            | ----------- | -------------------| ----------------------- |
            | 400         | BAD_REQUEST        | Invalid request bundle. |
          content:
            application/fhir+json:
              examples:
                example:
                  value:
                    $ref: components/examples/release/validation-error.json
  /FHIR/R4/Task/$release:
    post:
      operationId: release
      summary: Download prescription
      description: |
        ## Overview
        The release endpoint is used to download prescriptions from Spine prior to being dispensed to a patient. 
        To do this, send a [Task-release-message](https://simplifier.net/guide/DigitalMedicines/release-duplicate-2) to this endpoint.

        The endpoint will return a set of (up to 25) prescriptions associated with the pharmacy that sends the request.

        This endpoint is only available in the sandbox environment.
      tags:
        - dispensing
      parameters:
        - $ref: '#/components/parameters/BearerAuthorization'
        - $ref: '#/components/parameters/RequestID'
        - $ref: '#/components/parameters/CorrelationID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            examples:
              owner:
                value:
                  $ref: components/examples/secondary-care/homecare/acute/nominated-pharmacy/clinical-practitioner/1-Task-Request-Release-200_OK.json
      responses:
        '200':
          description: Successfully downloaded a prescription for dispensing.
          content:
            application/fhir+json:
              schema:
                type: object
              examples:
                example:
                  value:
                    $ref: components/examples/sandbox/Release-Response-200_OK.json
        '4XX':
          description: |
            An error occurred as follows:

            | HTTP status | Error code         | Description             |
            | ----------- | -------------------| ----------------------- |
            | 400         | BAD_REQUEST        | Invalid request bundle. |
          content:
            application/fhir+json:
              schema:
                type: object
              examples:
                example:
                  value:
                    $ref: components/examples/release/validation-error.json
components:
  parameters:
    BearerAuthorization:
      in: header
      name: Authorization
      description: |
        An [OAuth 2.0 bearer token](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis).
        Required in all environments except sandbox.
      required: false
      schema:
        type: string
        format: '^Bearer\ [[:ascii:]]+$'
        example: 'Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM'
    RequestID:
      in: header
      name: X-Request-ID
      required: true
      description: |
        A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.

        Must be a universally unique identifier (UUID) (ideally version 4).
        Mirrored back in a response header.
        If you re-send a failed request, use the same value in this header.
        Required in all environments except sandbox.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
        example: 60E0B220-8136-4CA5-AE46-1D97EF59D068
    CorrelationID:
      in: header
      name: X-Correlation-ID
      required: false
      description: |
        An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters.

        Mirrored back in a response header.
      schema:
        type: string
        example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA
  responses:
    200OperationOutcome:
      description: A successful response.
      content:
        application/fhir+json:
          schema:
            type: object
            description: |
              Outcome of an operation that does not result in a resource or bundle being returned (such as error, async/batch submission).
            properties:
              resourceType:
                type: string
                description: FHIR Resource Type.
                enum:
                  - "OperationOutcome"
                example: "OperationOutcome"
              issue:
                type: array
                description: List of issues that have occurred.
                minItems: 1
                items:
                  type: object
                  required:
                    - severity
                    - code
                  properties:
                    severity:
                      type: string
                      enum: [ "information" ]
                      description: Severity of the error.
                      example: "information"
                    code:
                      type: string
                      enum: [ "informational" ]
                      description: FHIR error code.
                      example: "informational"
                    diagnostics:
                      type: string
                      example: "Message Sent"
  schemas: 
    parameters-response:
      $ref: "components/schemas/ParametersResponse.yaml"
    operation-outcome:
      $ref: "components/schemas/OperationOutcome.yaml"
