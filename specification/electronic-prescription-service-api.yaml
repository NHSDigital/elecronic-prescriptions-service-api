# This is an OpenAPI Specification (https://swagger.io/specification/)
# for the Electronic Prescription Service (EPS) API
# owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  title: Electronic Prescription Service (FHIR) API
  version: "{VERSION}"
  contact:
    name: Electronic Prescription Service FHIR API Support
    url: "https://digital.nhs.uk/developer/help-and-support"
    email: "api.management@nhs.net"
  description: |
    ## Overview
    Use this API to access the [Electronic Prescription Service (EPS)](https://digital.nhs.uk/services/electronic-prescription-service) - the national service used to send electronic prescription messages between prescribers and dispensers.

    You can:
    * prepare a secondary care (outpatient) prescription for signing
    * create a secondary care (outpatient) prescription
    * cancel a secondary care (outpatient) prescription
    * evaluate prescription signing client implementations

    You cannot currently use this API to:
    * prepare a primary care prescription for signing
    * create a primary care prescription
    * prepare a secondary care (other than outpatient) prescription for signing
    * create a secondary care (other than outpatient) prescription
    * prepare a tertiary care prescription for signing
    * create a tertiary care prescription
    * check the status of a prescription
    * release a prescription for dispensing
    * claim for a dispensed prescription
    * track prescriptions or check a prescription's status

    This API can only be accessed by healthcare professionals, authenticated with an NHS smartcard or equivalent.
    
    ## Digital signatures
    Electronic prescription messages are digitally signed to protect against tampering and to prevent repudiation. While the messages themselves are FHIR-based, for reasons of backwards compatibility, the signatures must be represented in HL7 V3 format. To make this easier, you can POST a prescription to the `/$prepare` endpoint to receive exactly the HL7 V3 fragments which need to be signed to conform to the specification.

    To generate a signature for your prescription, you can use the digital signature service. To access the service, [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Using this API
    To create a prescription:
    1. POST a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order) to the `/$prepare` endpoint
    2. sign the response and put the result in a `Provenance` resource
    3. add the `Provenance` to the prescription-order message
    4. POST the signed prescription-order message to the `/$process-message` endpoint

    To cancel a prescription:
    1. POST a [prescription-order-update message](https://simplifier.net/guide/DigitalMedicines/prescription-order-update) to the `/$process-message` endpoint
    
    ## Legal Use
    This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development.
    
    You must do this before you can go live (see ‘Onboarding’ below).
    
    ## Related APIs
    The following APIs also give access to the Electronic Prescription Service:
    - [Electronic Prescription Service (HL7 V3) API](https://data.developer.nhs.uk/dms/mim/4.2.00/Index.htm) - use this if you want to use functions that are not yet available on the FHIR API
    - [Prescription Tracker API](https://developer.nhs.uk/apis/eps-tracker) - use this if you want a read-only interface to obtain information about a patient’s prescriptions

    ## API status and roadmap
    All endpoints are in [alpha](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status) - expect further breaking changes.
    
    The API is currently available for sandbox testing and integration testing, but not for production use.

    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?tag=eps-fhir-api).
    
    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).
    
    ## Technology
    
    This API conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir) global standard for health care data exchange.
    Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core), which is built on FHIR Release 4.

    You don’t need to know much about FHIR to use this API - FHIR APIs are just RESTful APIs that follow specific rules.
    In particular:
    - array names are singular, for example `line` not `lines` for address lines
    - data items that are country-specific and thus not included in the FHIR global base resources are usually wrapped in an `extension` object

    ## Network access
    This API is available on the internet and, indirectly, on the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network). To use this API with NHS smartcards (see below) you do need an HSCN connection, although internet-facing alternatives are available.

    For more details see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Authorisation
    This API is [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:
    - a healthcare professional
    - strongly authenticated, using either an NHS smartcard or a modern alternative

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to authorise the calling system.
    It supports the following security patterns:
    * user-restricted RESTful API - using NHS Identity - combined authentication and authorisation
    * user-restricted RESTful API - using NHS Identity - separate authentication and authorisation

    For more details, see [user-restricted APIs](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis).

    ## Environment and Testing

    | Purpose           | URL                                                                 |
    | -------------     | --------------------------------------------------------------------|
    | Sandbox           | `https://sandbox.api.service.nhs.uk/electronic-prescriptions`       |
    | Integration test  | `https://int.api.service.nhs.uk/electronic-prescriptions`           |
    | Production        | Not yet available                                                   |

    ### Sandbox testing
    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    * is for early developer testing
    * only covers a limited set of scenarios
    * is stateless, so it does not actually persist any updates
    * is open access, so does not allow you to test authorisation
    
    For more details on sandbox testing, or to try out the sandbox using our "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    * is for formal integration testing
    * is stateful, so persists updates
    * includes authorisation, with smartcard and non-smartcard options
    
    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).   
    
    ## Onboarding
    You need to get your software approved by us before it can go live with this API. We call this onboarding. We are hoping to make the onboarding process as lightweight and as self-service as possible however it can sometimes be quite long, so it’s worth planning well ahead.

    To onboard for this API, follow the onboarding process for APIs by following the Supplier Conformance Assessment List (SCAL) process.

    When following the SCAL process for the EPS API, please note that:

    **In step 1:** To confirm your use case for this API, you need to contact the EPS team at epssupport@nhs.net
    
    **In step 6:** When implementing your clinical risk management process, you must review and integrate the EPS FHIR API hazard log into your own risk log. You’ll find it embedded within the EPS FHIR API tab in the SCAL.
    
    **In step 8:** You need to review and complete the EPS FHIR API risk log to show that you have understood and mitigated the various risks. You might be asked to provide evidence to prove that controls have been put in place. You’ll find the risk log embedded within the EPS FHIR API tab in the SCAL. This is separate from the clinical safety hazard log mentioned above.
    
    **In step 9:** You must conduct penetration testing of your system to CHECK standards.
    
    **In step 10:** When you complete the Service Desk Registration Form, send it to api.management@nhs.net.
    
    **In step 11:** Submit your completed SCAL to api.management@nhs.net.

    **In step 14:** To request production access, contact us at api.management@nhs.net.
    
    ## Responses
    ### 2xx responses
    **Note: This section is under development and subject to change. All Spine responses are returned with 200 HTTP codes until a Spine translation service is built. This does not affect the sandbox environment.**
    
    | Endpoint               | HTTP code | Response format                                                                                                                                             |
    | ---------------------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | POST /$prepare         | 200       | [See /$prepare response body](https://digital.nhs.uk/developer/api-catalogue/electronic-prescription-service-fhir#api-Prescribing-preparePrescription)      |
    | POST /$process-message | 200       | [See /$process-message response body](https://digital.nhs.uk/developer/api-catalogue/electronic-prescription-service-fhir#api-Prescribing-sendPrescription) |
    
    ### 4xx responses
    **Note: This section is under development and subject to change. All Spine responses are returned with 200 HTTP codes until a Spine translation service is built. This does not affect the sandbox environment.**
    
    | Endpoint              | HTTP code | Response format                           | Environment      | Cause                 |
    | --------------------- | --------- | ----------------------------------------- | ---------------- | --------------------- |
    | Any                   | 400       | See "Unsupported operation" example below | Sandbox          | Unsupported operation |
    | Any                   | 408       | Returns original request data             | Integration test | Request timeout       |
    
    #### Validation errors
    The following errors may be returned by any endpoint in any environment and will all return a 400 HTTP status code.
    
    | Issue severity | Issue type | Error code             | Cause                                                           |
    | -------------- | ---------- | ---------------------- | --------------------------------------------------------------- |
    | error          | value      | MISSING_FIELD          | Bundle contains incorrect number of resources of a certain type |
    | error          | value      | MISSING_FIELD          | Bundle does not contain "id" field                              |
    | error          | value      | INVALID_VALUE          | Invalid value in MedicationRequest                              |
    | fatal          | value      | MISSING_FIELD          | Bundle does not contain "entry" field                           |
    | fatal          | value      | INCORRECT_RESOURCETYPE | ResourceType is not "Bundle"                                    |
    | fatal          | value      | INVALID_VALUE          | MessageHeader indicates invalid MessageType                     |
    
    #### Example: Unsupported operation
    If attempting to call the `/_poll` endpoint in the sandbox environment, the following error would be returned:
      ```
      {
        resourceType: "OperationOutcome",
        issue: [
          {
            code: "informational",
            severity: "information",
            details: {
              coding: [
                {
                  code: "INTERACTION_NOT_SUPPORTED_BY_SANDBOX",
                  display: "Interaction not supported by sandbox",
                  system: "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
                  version: "1"
                }
              ]
            }
          }
        ]
      }
      ```
    
    ## Resources
    Use the [Digital Medicines Implementation Guide](https://simplifier.net/guide/DigitalMedicines) to assist with your integration.
    This is the FHIR specification for Digital Medicines starting with the assets required for an electronic prescription sent to the EPS.
servers:
  - url: 'https://sandbox.api.service.nhs.uk/electronic-prescriptions'
    description: 'Sandbox'
  - url: 'https://int.api.service.nhs.uk/electronic-prescriptions'
    description: 'Integration test'
tags:
  - name: dispensing
  - name: prescribing
paths:
  /$prepare:
    post:
      operationId: prepare-prescription
      summary: Convert a prescription message to signature fragments
      description: |
        Use this endpoint to convert a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order) in FHIR format into HL7 V3 signature fragments which can then be signed by the prescriber.
      tags:
        - prescribing
      requestBody:
        required: true
        content:
         #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              $ref: components/schemas/Bundle.yaml
            examples:
              example:
                value:
                  $ref: components/examples/example-1-repeat-dispensing/PrepareRequest-FhirMessageUnsigned.json
        description: ''
      responses:
        '200':
          description: Successful conversion.
          content:
            #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
            application/json:
              schema:
                $ref: components/schemas/Parameters.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-1-repeat-dispensing/PrepareResponse-FhirMessageDigest.json
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-4XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
  /$process-message:
    post:
      operationId: send-message
      summary: Send a prescription message to EPS
      description: |
        Use this endpoint to send a prescription message to EPS.
        
        The effect of calling this endpoint depends on the type of the message, which is determined by the `MessageHeader` resource:
        * To create a prescription, send a [prescription-order message](https://simplifier.net/guide/DigitalMedicines/prescription-order). The message must include a digital signature.
        * To cancel a prescription, send a [prescription-order-update message](https://simplifier.net/guide/DigitalMedicines/prescription-order-update).
      tags:
        - prescribing
      requestBody:
        required: true
        content:
          #FIXME - should be set to application/fhir+json but we have had to change it due to an Apigee SmartDocs bug.
          application/json:
            schema:
              $ref: components/schemas/Bundle.yaml
            examples:
              success:
                value:
                  $ref: components/examples/example-1-repeat-dispensing/SendRequest-FhirMessageSigned.json
              patient-deceased:
                value:
                  $ref: components/examples/example-b-spine-error-patient-deceased/SendRequest-FhirMessageSigned.json
        description: ''
      responses:
        '200':
          description: Successfully submitted.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-2XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-1-repeat-dispensing/SendRequest-SuccessResponse.json
        '4XX':
          description: Invalid request.
          content:
            application/fhir+json:
              schema:
                $ref: components/schemas/OperationOutcome-4XX.yaml
              examples:
                example:
                  value:
                    $ref: components/examples/example-a-validation-error-missing-field/Response-FhirError.json
components:
  schemas:
    Bundle:
      $ref: components/schemas/Bundle.yaml
    MessageHeader:
      $ref: components/schemas/MessageHeader.yaml
    MedicationRequest:
      $ref: components/schemas/MedicationRequest.yaml
    Patient:
      $ref: components/schemas/Patient.yaml
    Practitioner:
      $ref: components/schemas/Practitioner.yaml
    PractitionerRole:
      $ref: components/schemas/PractitionerRole.yaml
    Organization:
      $ref: components/schemas/Organization.yaml
    Parameters:
      $ref: components/schemas/Parameters.yaml
    Provenance:
      $ref: components/schemas/Provenance.yaml
    HealthcareService:
      $ref: components/schemas/HealthcareService.yaml
    Location:
      $ref: components/schemas/LocationResource.yaml
