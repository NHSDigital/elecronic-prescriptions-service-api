name: Build

on:
  push:
    branches: [master]

jobs:
  tag_release:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{steps.output_version_tag.outputs.VERSION_TAG}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # This causes all history to be fetched, which is required for calculate-version to function

      - name: Install Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Update apt repositories
        run: sudo apt update

      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install poetry
        run: pip install poetry

      - name: Cache poetry packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-cache-poetry-packages-${{ hashFiles('**/poetry.lock') }}

      - name: Install python packages
        run: poetry install

      - name: Set VERSION_TAG
        id: output_version_tag
        run: |
          VERSION_TAG=$(poetry run python scripts/calculate_version.py)
          echo "VERSION_TAG=${VERSION_TAG}" >> "$GITHUB_OUTPUT"

      - name: Create release (master only)
        id: create-release
        if: github.ref == 'refs/heads/master'
        # using commit hash for version v1.13.0
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.SPEC_VERSION }}
          commit: ${{  github.sha }}
          body: |
            ## Commit message
            ${{ github.event.head_commit.message }}
            ## Info
            [See code diff](${{ github.event.compare }})
            [Release workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }})

  build_api:
    uses: ./.github/workflows/build_api.yml

  deploy_api_dev:
    uses: ./.github/workflows/deploy_api.yml
    needs: [tag_release, build_api]
    with:
      VERSION_NUMBER: ${{ needs.tag_release.outputs.version_tag }}
      STACK_NAME: eps-fhir-facade
      AWS_ENVIRONMENT: dev
      APIGEE_ENVIRONMENT: internal-dev
      
  # deploy_api_qa:
  #   uses: ./.github/workflows/deploy_api.yml
  #   with:
