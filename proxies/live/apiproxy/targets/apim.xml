<TargetEndpoint name="apim">
  <PreFlow/>
  <Flows>
    <Flow name="Status">
      <Request>
        <Step>
          <Name>KeyValueMapOperations.GetSharedSecureVariables</Name>
        </Step>
        <Step>
          <Condition>private.apigee.status-endpoint-api-key NotEquals request.header.apikey</Condition>
          <Name>RaiseFault.403Forbidden</Name>
        </Step>
      </Request>
      <Condition>((proxy.pathsuffix MatchesPath "/_status") or (proxy.pathsuffix MatchesPath "/_validatormetrics") or (proxy.pathsuffix MatchesPath "/_validatormetrics/**")) and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="Default">
      <Request>
        <Step>
          <Name>OauthV2.VerifyAccessToken</Name>
        </Step>
        <Step>
          <Name>AssignMessage.SetAccessModeApplicationRestricted</Name>
<!--          <Condition>(scope JavaRegex "(.+\ urn:nhsd:apim:user-nhs-id:aal3:personal-demographics-service\ .+|^urn:nhsd:apim:user-nhs-id:aal3:personal-demographics-service\ .+|.+\ urn:nhsd:apim:user-nhs-id:aal3:personal-demographics-service$|^urn:nhsd:apim:user-nhs-id:aal3:personal-demographics-service$|.+\ personal-demographics-service:USER-RESTRICTED\ .+|^personal-demographics-service:USER-RESTRICTED\ .+|.+\ personal-demographics-service:USER-RESTRICTED$|^personal-demographics-service:USER-RESTRICTED$)")</Condition>-->
          <Condition>(scope Matches "urn:nhsd:apim:app:level3:*")</Condition>
        </Step>
        <Step>
          <Name>AssignMessage.SetAccessModeUserRestricted</Name>
          <Condition>(scope Matches "urn:nhsd:apim:user-nhs-id:aal3:*") and (accesstoken.id_token-acr StartsWith "AAL3")</Condition>
        </Step>
        <Step>
          <!-- Header NHSD-Request-ID must be in the correct format (GUID) -->
          <Name>RaiseFault.400MissingHeader</Name>
          <Condition>(not original-request-details.header.X-Request-ID ~~ "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")</Condition>
        </Step>
        <Step>
          <Name>Quota</Name>
        </Step>
        <Step>
          <Name>SpikeArrest</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddUserIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddIssuerHeader</Name>
        </Step>
        <Step>
          <!--This should always be the last Step - as it is just before the message is sent - so the initial request stays intact for as long as possible.
                      The Swapping of the Request Headers converts X-Request-ID and X-Correlation-ID to NHSD-Request-ID and NHSD-Correlation-ID before sending to backend. -->
          <Name>AssignMessage.Swap.RequestHeaders</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AssignMessage.Mirror.CorrelationID</Name>
          <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
        </Step>
        <Step>
          <Name>AssignMessage.Mirror.RequestID</Name>
          <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
        </Step>
      </Response>
    </Flow>
  </Flows>
  <HTTPTargetConnection>
    <Properties>
      <!-- Allow 'expected' error code responses to pass unhindered to caller
      Anything unexpected will be sanitised by the DefaultFaultRule -
      https://docs.apigee.com/api-platform/fundamentals/fault-handling#customhandlingofhttperrorcodesfromthetargetserver -->
      <Property name="success.codes">1xx,2xx,3xx,4xx</Property>
    </Properties>
    {{ HOSTED_TARGET_CONNECTION }}
  </HTTPTargetConnection>
  <FaultRules>
    <FaultRule name="access_token_expired">
      <Step>
        <Name>ExtractVariables.OAuthErrorFaultString</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.OAuthPolicyErrorResponse</Name>
      </Step>
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
    </FaultRule>
    <FaultRule name="missing-header">
      <Condition>(fault.name = "RaiseFault")</Condition>
    </FaultRule>
  </FaultRules>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.CatchallErrorMessage</Name>
    </Step>
    <Step>
      <Name>AssignMessage.Mirror.CorrelationID</Name>
      <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
    </Step>
    <Step>
      <Name>AssignMessage.Mirror.RequestID</Name>
      <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
    </Step>
  </DefaultFaultRule>
</TargetEndpoint>
